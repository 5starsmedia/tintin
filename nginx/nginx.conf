server {
    #server_name ~^(www\.)?(?<domain>.+)$;
    server_name esvit.name;
    listen 80;

    root "/var/www/tintin";

    # http://whomwah.com/2010/07/05/fixing-the-trailing-slash-in-nginx/
    server_name_in_redirect off;

    #Morfeus and other fucking bots:)
    if ($http_user_agent ~* "(Morfeus|larbin|ZmEu|Toata|talktalk)" ) {
        return 500;
    }

    #none www(retest, because no logs by www.)
    if ($host ~* "www\.(.*)") {
        set $none_www $1;
        rewrite ^(.*)$ $scheme://$none_www$1 permanent;
    }

    location / {
        root /dev/null;
        error_page 404 = @prerender;

        try_files $uri @prerender;
    }
    location = /index.html {
        return 301 $scheme://$host;
    }
    location /gridfs/ {
        internal;

        add_header x-gridfs-file $uri;
        error_page 404 = /gridfs/$domain/index.html;

        gridfs 5stars field=filename type=string
           user=admin5stars
           pass=5stars;
        mongo "5stars"
            masterdb.5stars.link:27017
            slave1.5stars.link:27018;
    }

    location ~ /cabinet/(.*) {
        try_files /build/$1 /build/index.html /sites/index.html;
    }

    location ~ ^/yandex_(.*).html$ {
        rewrite ^/yandex_(.*).html$ /api/sites/yandex?id=$1 last;
        access_log off;
    }
    location ~ ^/google(.*).html$ {
        rewrite ^/google(.*).html$ /api/sites/google?id=$1 last;
        access_log off;
    }
    location ~ ^/feed(.*).xml$ {
        rewrite ^/feed(.*).xml$ /api/posts/feed?id=$1 last;
        access_log off;
    }

    location ~ ([^/]*)sitemap(.*)\.x(m|s)l$ {
        rewrite ^/sitemap\.xml$ /api/sitemap last;
        access_log off;
    }
    location /robots.txt {
        rewrite .* /api/sites/robots last;
        access_log off;
    }

    location /current.js {
        rewrite .* /api/sites/settings last;
        access_log off;
    }

    # nodejs proxy
    location /nodejs/ {
        internal;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://localhost:8080/;
        proxy_redirect off;

        client_max_body_size       100m;
        client_body_buffer_size    128k;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    location /socket.io/ {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    location @prerender {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_intercept_errors on;

        # Share bots
        set $share 0;
        if ($http_user_agent ~* "facebookexternalhit|vkshare|odklbot") {
            set $share 1;
        }
        if ($args ~ "share=1") {
            set $share 1;
        }

        # Other bots
        set $prerender 0;
        if ($http_user_agent ~* "googlebot|yahoo|bingbot|baiduspider|yandex|yeti|yodaobot|gigabot|ia_archiver|facebookexternalhit|twitterbot|vkshare|odklbot|developers\.google\.com") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_|prerender=1") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }

        if ($share = 1) {
            rewrite .* $scheme://$host/api/share.php?url=$request_uri break;
        }
        if ($prerender = 1) {
            add_header x-prerender true;
            rewrite .* /$scheme://$host$request_uri break;
            proxy_pass http://10.0.0.3:3000;
        }
        if ($prerender = 0) {
            rewrite ^(.*)$ /gridfs/$domain$1 last;
        }
    }
}
